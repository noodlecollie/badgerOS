#pragma once

#include <cstddef>
#include <cstdint>
#include <BadgerGL/BitmapMask.h>
#include <BadgerGL/Defs.h>

namespace Resources
{
	namespace ArialSmallBitmap
	{
		static constexpr size_t WIDTH = 128;
		static constexpr size_t HEIGHT = 32;
		static constexpr size_t DATA_LENGTH = BadgerGL::maskedDataSizeForDimensions(WIDTH, HEIGHT);

		static constexpr uint8_t DATA[DATA_LENGTH] =
		{
			0xF8, 0x84, 0xA1, 0xDF, 0x85, 0xD0, 0x08, 0x22,
			0xC8, 0xE1, 0x04, 0x83, 0x9C, 0x8F, 0xE1, 0xFE,
			0x06, 0x49, 0x12, 0xB6, 0x46, 0x31, 0x05, 0x65,
			0x2C, 0x12, 0x89, 0x82, 0xA2, 0x50, 0x12, 0xC3,
			0xB2, 0x2A, 0x94, 0xB6, 0x48, 0x29, 0x05, 0x65,
			0x1C, 0x0C, 0x8A, 0x44, 0xC1, 0x50, 0x0A, 0xC2,
			0xC9, 0x2A, 0x94, 0xD6, 0x49, 0xC9, 0x02, 0xA5,
			0x1A, 0x08, 0x52, 0x44, 0xC1, 0x9F, 0x09, 0xC2,
			0x45, 0x32, 0x8C, 0x96, 0x2A, 0x0A, 0x9A, 0xA8,
			0x1A, 0x0F, 0x22, 0x28, 0xC1, 0x50, 0x09, 0xC2,
			0x45, 0x2A, 0x94, 0x96, 0x2A, 0x0A, 0xA5, 0xAF,
			0x1A, 0xCC, 0x22, 0x28, 0xC1, 0x30, 0x0E, 0xC2,
			0x65, 0x29, 0x94, 0xB6, 0x12, 0x04, 0x65, 0x30,
			0x29, 0x12, 0x21, 0x10, 0xA2, 0x30, 0x12, 0xC3,
			0xD9, 0x28, 0x94, 0xD6, 0x11, 0x84, 0x58, 0x30,
			0xC9, 0xE1, 0x22, 0x10, 0x9C, 0xCF, 0xE5, 0xFE,
			0x02, 0x4A, 0x92, 0x96, 0x10, 0x86, 0x9E, 0x8B,
			0xF4, 0x39, 0xE7, 0x90, 0x77, 0xDF, 0xB9, 0x1F,
			0xFC, 0x85, 0x61, 0x7F, 0x28, 0x85, 0x61, 0x8C,
			0x34, 0xC6, 0x18, 0x99, 0x88, 0x28, 0xC6, 0x10,
			0x8F, 0x1F, 0x86, 0x5F, 0x24, 0x85, 0x41, 0x54,
			0x3F, 0x46, 0x08, 0x55, 0x08, 0x28, 0xC2, 0x90,
			0x11, 0x34, 0x86, 0x61, 0xC2, 0x84, 0x86, 0x53,
			0x2A, 0x46, 0xC8, 0xD4, 0x7B, 0x24, 0xA2, 0x5F,
			0x21, 0x52, 0x86, 0x61, 0xC3, 0x84, 0x58, 0x24,
			0xEA, 0x45, 0x04, 0x13, 0x8C, 0xC4, 0x93, 0x30,
			0x21, 0x52, 0xFE, 0xDF, 0x22, 0x85, 0x60, 0x24,
			0x3F, 0x44, 0x02, 0x3F, 0x8C, 0x02, 0x92, 0x50,
			0x21, 0x91, 0x86, 0x49, 0x24, 0x85, 0x61, 0x24,
			0x25, 0x44, 0x11, 0x51, 0x8C, 0x22, 0x82, 0x50,
			0x21, 0x91, 0x86, 0x51, 0x14, 0x7A, 0x9E, 0x13,
			0x25, 0xB8, 0xEF, 0x90, 0x73, 0xC2, 0x91, 0x9F,
			0x91, 0x10, 0x87, 0x51, 0x08, 0x16, 0x45, 0x86,
			0x1F, 0xB1, 0xE7, 0x9C, 0x7B, 0x2E, 0xC6, 0xD8,
			0xCF, 0x1F, 0x86, 0x61, 0x68, 0x19, 0x65, 0x46,
			0x9A, 0x72, 0x19, 0x63, 0x8C, 0x31, 0x46, 0x35,
			0x3F, 0xD8, 0x1F, 0x60, 0x98, 0x11, 0x5F, 0xE9,
			0xAE, 0x2A, 0xE9, 0xC3, 0x8F, 0x31, 0x2A, 0x12,
			0x21, 0x64, 0x12, 0x60, 0x8B, 0x11, 0x45, 0x49,
			0xAE, 0x2A, 0x19, 0x43, 0x88, 0x31, 0x2A, 0x12,
			0x21, 0x44, 0xD2, 0xEC, 0x8C, 0x19, 0x45, 0x49,
			0x4E, 0x24, 0x99, 0x63, 0x8C, 0x31, 0x13, 0x15,
			0x2F, 0x44, 0x32, 0x73, 0x9C, 0x36, 0x45, 0x49,
			0x4F, 0x24, 0x69, 0x9D, 0x8B, 0xCE, 0x92, 0x98,
			0x21, 0x64, 0x12, 0x63, 0x6C, 0x30, 0xC5, 0x50,
			0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x21, 0x58, 0x12, 0x63, 0x0C, 0xD0, 0xCC, 0x50,
			0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x21, 0x40, 0x32, 0x73, 0x0C, 0xBE, 0xFD, 0x07,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0xE1, 0x3F, 0xD2, 0xAC, 0x7E, 0x6F, 0x02, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0xDF, 0x05, 0x48, 0xC8, 0x41, 0x07, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x28, 0x3A, 0x47, 0x94, 0x7E, 0x01, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0xC4, 0xC0, 0xF0, 0x55, 0x01, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x04, 0x39, 0x47, 0x22, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x22, 0x06, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0xDF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
		};

		static constexpr BadgerGL::BitmapMask BITMAP(WIDTH, HEIGHT, DATA);
	}
}

