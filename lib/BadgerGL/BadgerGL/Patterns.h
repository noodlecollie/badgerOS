#pragma once

#include <cstdint>

namespace BadgerGL
{
	// Specified in bits of primary colour per 8 bits.
	// Easy half-byte is designed to be repeated along a row/column.
	static constexpr uint32_t BIT_GRADIENT[9] =
	{
		// 0/8
		{
			0x00000000
		},

		// 1/8
		{
			(0b0010 << 28) |
			(0b0000 << 24) |
			(0b1000 << 20) |
			(0b0000 << 16) |
			(0b0001 << 12) |
			(0b0000 << 8) |
			(0b0100 << 4) |
			(0b0000 << 0)
		},

		// 2/8
		{
			(0b0010 << 28) |
			(0b0100 << 24) |
			(0b0001 << 20) |
			(0b1000 << 16) |
			(0b0010 << 12) |
			(0b0100 << 8) |
			(0b0001 << 4) |
			(0b1000 << 0)
		},

		// 3/8
		{
			(0b0010 << 28) |
			(0b0101 << 24) |
			(0b1000 << 20) |
			(0b0110 << 16) |
			(0b0001 << 12) |
			(0b1010 << 8) |
			(0b0100 << 4) |
			(0b1001 << 0)
		},

		// 4/8
		{
			(0b0101 << 28) |
			(0b1010 << 24) |
			(0b0101 << 20) |
			(0b1010 << 16) |
			(0b0101 << 12) |
			(0b1010 << 8) |
			(0b0101 << 4) |
			(0b1010 << 0)
		},

		// 5/8
		{
			(0b1101 << 28) |
			(0b1010 << 24) |
			(0b0111 << 20) |
			(0b1001 << 16) |
			(0b1110 << 12) |
			(0b0101 << 8) |
			(0b1011 << 4) |
			(0b0110 << 0)
		},

		// 6/8
		{
			(0b1101 << 28) |
			(0b1011 << 24) |
			(0b1110 << 20) |
			(0b0111 << 16) |
			(0b1101 << 12) |
			(0b1011 << 8) |
			(0b1110 << 4) |
			(0b0111 << 0)
		},

		// 7/8
		{
			(0b1101 << 28) |
			(0b1111 << 24) |
			(0b0111 << 20) |
			(0b1111 << 16) |
			(0b1110 << 12) |
			(0b1111 << 8) |
			(0b1011 << 4) |
			(0b1111 << 0)
		},

		// 8/8
		{
			0xFFFFFFFF
		},
	};
}
